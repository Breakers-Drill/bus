/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
 */
class GeneratorService {
  constructor(busService, intervalMs = 500) {
    this.busService = busService;
    this.intervalMs = intervalMs;
    this.isRunning = false;
    this.intervalId = null;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞
   * @param {number} min - –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
   * @param {number} max - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
   * @returns {number} –°–ª—É—á–∞–π–Ω–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ
   */
  getRandomInt(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
  }

  /**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π
 * @param {number} min - –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 * @param {number} max - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 * @returns {number} –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π
 */
  getRandomFloat(min, max) {
    return Math.random() * (max - min) + min;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
   * @returns {Object} –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
   */
  generateMessage() {
    const msg = {
      payload: {
        "DC_out_100ms[144]": this.getRandomInt(0, 1),
        "DC_out_100ms[146]": this.getRandomInt(0, 1),
        "DC_out_100ms[148]": this.getRandomFloat(10, 50),
        "DC_out_100ms[164]": this.getRandomFloat(20, 80),
        "DC_out_100ms[165]": this.getRandomFloat(5, 25),
        "DC_out_100ms[140].8": this.getRandomInt(0, 100),
        "DC_out_100ms[140].10": this.getRandomFloat(0, 5),
        "DC_out_100ms[140].9": this.getRandomFloat(50, 150),
        "DC_out_100ms[141].10": this.getRandomFloat(100, 200),
        "DC_out_100ms[141].8": this.getRandomInt(0, 1),
        "DC_out_100ms[141].9": this.getRandomFloat(15, 75),
        "DC_out_100ms[140].13": this.getRandomFloat(0, 10),
        "DC_out_100ms[140].14": this.getRandomInt(0, 500),
        "DC_out_100ms[141].13": this.getRandomFloat(5, 50)
      },
      topic: "PLC/test"
    };

    return msg;
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ BusService
   * @param {Object} message - –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
   */
  async sendMessage(message) {
    try {
      await this.busService.processMessage(message);
    } catch (error) {
      console.error('‚ùå Error processing message:', error.message);
    }
  }

  /**
 * –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
 */
  async start() {
    if (this.isRunning) {
      console.log('‚ö†Ô∏è GeneratorService is already running');
      return;
    }

    console.log(`üöÄ Starting GeneratorService (interval: ${this.intervalMs}ms)`);
    this.isRunning = true;

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è BusService
    await this.busService.initialize();

    // –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    this.intervalId = setInterval(async () => {
      const message = this.generateMessage();
      await this.sendMessage(message);
    }, this.intervalMs);
  }

  /**
 * –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
 */
  async stop() {
    if (!this.isRunning) {
      console.log('‚ö†Ô∏è GeneratorService is not running');
      return;
    }

    console.log('üõë Stopping GeneratorService');
    this.isRunning = false;

    if (this.intervalId) {
      clearInterval(this.intervalId);
      this.intervalId = null;
    }

    // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã BusService
    await this.busService.shutdown();
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞
   * @returns {Object} –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞
   */
  getStatus() {
    return {
      isRunning: this.isRunning,
      intervalMs: this.intervalMs,
      busServiceType: this.busService.constructor.name
    };
  }
}

module.exports = GeneratorService; 